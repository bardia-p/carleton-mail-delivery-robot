@startuml UML_diagram
skinparam classFontSize 11
skinparam classBackgroundColor beige
skinparam ClassBorderColor red
skinparam ArrowColor red


package "models" <<frame>> {

    class "AppUser" {
        - username: String
        - password: String
        - type: UserType
        - currentDelivery: Delivery
        + AppUser(username: String, password: String)
        + getUsername(): String
        + getPassword(): String
        + getCurrentDelivery(): Delivery
        + getType(): UserType
        + setUsername(username: String): void
        + setPassword(password: String): void
        + setCurrentDelivery(delivery: Delivery): void
        + setType(type: UserType): void
        + equals(o: Object): boolean
    }

    class "SuperUser" {
        + SuperUser(username: String, password: String)
    }

    class "Robot" {
        - name: String
        - status: RobotStatus
        - listTrips: List<Delivery>
        + Robot(name: String, status: RobotStatus, listTrips: List<Delivery>)
        + Robot(name: String)
        + getName(): String
        + getStatus(): RobotStatus
        + getListTrips(): List<Delivery>
        + setName(name: String): void
        + setStatus(status: RobotStatus): void
        + setListTrips(listTrips: List<Delivery>): void
        + addTrip(delivery: Delivery): void
        + removeTrip(tripId: Long): boolean
    }


    enum "RobotStatus" {
        - IDLE
        - BUSY
    }

    class "Delivery" {
        - deliveryId: Long
        - startingDest: String
        - finalDest: String
        - statuses: List<String>
        - assignedRobot: Robot
        + Delivery(startingDest: String, finalDest: String)
        + getDeliveryId(): Long
        + getStartingDest(): String
        + getFinalDest(): String
        + getStatuses(): List<String>
        + getAssignedRobot(): Robot
        + setDeliveryId(deliveryId: Long): void
        + setStartingDest(startingDest: String): void
        + setFinalDest(finalDest: String): void
        + setStatus(statuses: List<String>): void
        + setAssignedRobot(assignedRobot: Robot): void
        + addStatus(s: String): void
    }
}

' Relationship arrows
"Robot" -up-> "RobotStatus"

"Delivery" "1  " o--* "0.." "Robot"
"AppUser" "1  " *-- "1 " "Delivery"
"SuperUser" --|> "AppUser"
@enduml